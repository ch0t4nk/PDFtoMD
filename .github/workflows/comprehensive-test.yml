name: MarkPDFDown Comprehensive Test Suite

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.9', '3.11', '3.13']
      fail-fast: false

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create test environment file
      run: |
        cp .env.template .env
        echo "OPENAI_API_KEY=test_key_placeholder" >> .env
        echo "OPENAI_API_BASE=https://api.openai.com/v1" >> .env
        echo "OPENAI_DEFAULT_MODEL=gpt-4o-mini" >> .env

    - name: Run comprehensive test suite
      run: |
        python test_comprehensive.py

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install ruff

    - name: Run Ruff linter
      run: |
        ruff check .

    - name: Run Ruff formatter check
      run: |
        ruff format --check .

  integration:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create test configuration
      run: |
        cp .env.template .env
        echo "OPENAI_API_KEY=test_key_placeholder" >> .env
        echo "OPENAI_API_BASE=https://api.openai.com/v1" >> .env
        echo "OPENAI_DEFAULT_MODEL=gpt-4o-mini" >> .env

    - name: Test core module imports
      run: |
        python -c "
        import sys
        sys.path.insert(0, 'src')
        from core.LLMClient import LLMClient
        from core.PDFWorker import PDFWorker
        from core.FileWorker import FileWorker
        from core.ImageWorker import ImageWorker
        print('âœ… All core modules imported successfully')
        "

    - name: Run integration test
      run: |
        python test_comprehensive.py config
