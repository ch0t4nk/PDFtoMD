# Universal File Converter (PDF/Image to Markdown)

import os
import sys
import subprocess
import time
from pathlib import Path
from config import config

def convert_file_direct(file_path, output_file):
    """Convert file (PDF or image) directly using Python subprocess with stdin"""
    
    try:
        # Read the file as binary
        with open(file_path, 'rb') as input_file:
            file_data = input_file.read()
        
        print(f"üìä Input file size: {len(file_data):,} bytes")
        
        # Run main.py with the file data as stdin
        start_time = time.time()
        process = subprocess.Popen(
            [sys.executable, 'src/core/main.py'],
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            cwd=os.getcwd()
        )
        
        stdout, stderr = process.communicate(input=file_data)
        end_time = time.time()
        
        print(f"üîç Process return code: {process.returncode}")
        if stderr:
            print(f"üö® Stderr: {stderr.decode('utf-8', errors='ignore')}")
        
        if process.returncode == 0:
            # Write the markdown output to file
            if stdout:
                with open(output_file, 'w', encoding='utf-8') as f:
                    f.write(stdout.decode('utf-8', errors='ignore'))
                
                file_size = os.path.getsize(output_file)
                return True, end_time - start_time, file_size, ""
            else:
                return False, end_time - start_time, 0, "No output generated"
        else:
            error_msg = stderr.decode('utf-8', errors='ignore') if stderr else "Unknown error"
            return False, end_time - start_time, 0, error_msg
            
    except (OSError, subprocess.SubprocessError, UnicodeDecodeError) as e:
        return False, 0, 0, str(e)

def convert_any_file(filename):
    """Convert any file (PDF or image) to Markdown"""
    
    # Check if file exists in pdfs directory
    file_path = os.path.join(str(config.DEFAULT_PDF_FOLDER), filename)
    if not os.path.exists(file_path):
        print(f"‚ùå File not found: {file_path}")
        print("Available files:")
        files = [f for f in os.listdir(str(config.DEFAULT_PDF_FOLDER)) if f.lower().endswith(('.pdf', '.png', '.jpg', '.jpeg', '.bmp'))]
        for f in sorted(files):
            print(f"   - {f}")
        return False
    
    # Prepare output
    file_name = Path(filename).stem
    output_dir = str(config.DEFAULT_CONVERTED_FOLDER)
    os.makedirs(output_dir, exist_ok=True)
    output_file = os.path.join(output_dir, f"{file_name}.md")
    
    print(f"üîÑ Converting: {filename}")
    print(f"üìÑ Input: {file_path}")
    print(f"üìù Output: {output_file}")
    print("-" * 40)
    
    success, duration, file_size, error = convert_file_direct(file_path, output_file)
    
    if success:
        print("‚úÖ Conversion successful!")
        print(f"   ‚è±Ô∏è  Time: {duration:.1f} seconds")
        print(f"   üìä Output size: {file_size:,} bytes")
        print(f"   üìÅ Saved to: {output_file}")
        
        # Show first few lines of output
        if file_size > 0:
            try:
                with open(output_file, 'r', encoding='utf-8') as f:
                    content = f.read()[:500]  # First 500 characters
                    print(f"\nüìÑ Preview:\n{content}...")
            except Exception as e:
                print(f"‚ö†Ô∏è  Could not preview output: {e}")
        
        return True
    else:
        print("‚ùå Conversion failed!")
        if error:
            print(f"   Error: {error}")
        return False

def main():
    if len(sys.argv) != 2:
        print("Usage: python convert_any.py <filename>")
        print("\nAvailable files:")
        if os.path.exists(str(config.DEFAULT_PDF_FOLDER)):
            files = [f for f in os.listdir(str(config.DEFAULT_PDF_FOLDER)) if f.lower().endswith(('.pdf', '.png', '.jpg', '.jpeg', '.bmp'))]
            for f in sorted(files):
                print(f"   - {f}")
        else:
            print("   No pdfs/ directory found!")
        return
    
    filename = sys.argv[1]
    convert_any_file(filename)

if __name__ == "__main__":
    main()